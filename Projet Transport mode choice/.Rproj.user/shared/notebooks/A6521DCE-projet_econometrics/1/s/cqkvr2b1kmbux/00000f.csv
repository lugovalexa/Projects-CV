"0","## arguments de fonction"
"0","my_var <- 'age' # Nom de variable"
"0","t_m <- model_final # chargement du modèle estimé"
"0","step <- 1 # pas d'incrément de la variable (pour obtenir l'axe des x)"
"0",""
"0","#"
"0","r_max <- max(t_m$model[,my_var])"
"0","r_min <- min(t_m$model[,my_var])"
"0","range_f <- seq(r_min,r_max,step)"
"0",""
"0","{"
"0","  # on crée une observation moyenne sur toutes les autres variables et on fait varier my_var"
"0","   t_m$data = t_m$data %>% dplyr::select(-c(id_pers, tir, zonetrav))"
"0","   mean_age <- as.data.frame(t(colMeans(t_m$data))) %>% "
"0","   cbind(range_f) %>%"
"0","   mutate(!!my_var := range_f)"
"0","  "
"0","  # crearion d'une variable age carré"
"0","  "
"0","  my_var2 <- paste0(""I("",my_var,""^2)"")"
"0","  mean_age <- mean_age %>% mutate(!!my_var2:= range_f^2)"
"0","  mean_age <- mean_age %>% dplyr::select(-range_f)"
"0","  "
"0","  # on prédit les probabilités et les intervalles de confiance"
"0","  preddata <- predict(t_m, "
"0","                      newdata = mean_age, "
"0","                      type = ""link"", "
"0","                      se.fit = T) %>%"
"0","    as.data.frame() %>% "
"0","    mutate("
"0","      Probabilité = t_m$family$linkinv(fit), "
"0","      lower = t_m$family$linkinv(fit - 1.96*se.fit), "
"0","      upper = t_m$family$linkinv(fit + 1.96*se.fit)) %>% "
"0","    cbind(mean_age) %>%"
"0","    dplyr::select(all_of(my_var),Probabilité,lower,upper)"
"0","  "
"0","  # plotting with ggplot: "
"0","  ggplot("
"0","    data = preddata, "
"0","    aes("
"0","      x = get(my_var),"
"0","      y = Probabilité,"
"0","      min = lower,"
"0","      ymax = upper)) +"
"0","    geom_ribbon(linetype=2, alpha=0.15,fill='#4292C6') +"
"0","    geom_line(color='#08306B') + "
"0","    labs(x=paste0(""Variable: "",my_var),y='Probabilité',color = NULL) + "
"0","    scale_x_continuous("
"0","      limits=c(r_min, r_max),"
"0","      expand = c(0,0))  +"
"0","    theme_classic() + theme("
"0","      legend.spacing.y = unit(0.1, ""cm""),"
"0","      legend.justification = c(0, 1),"
"0","      legend.position = c(0.7, 0.94),"
"0","      legend.title.align = 0.04,"
"0","      legend.background = element_rect("
"0","        color = NA,"
"0","        fill = NA)"
"0","    )"
"0","}"
